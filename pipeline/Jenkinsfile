pipeline {
    agent any
    options {
      disableConcurrentBuilds()
      disableRestartFromStage()
      disableResume()
      quietPeriod 30
      timeout(activity: true, time: 5)
      ansiColor('xterm')
      buildDiscarder logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '', daysToKeepStr: '30', numToKeepStr: '50')
    }
    stages {
        stage('CLONE  ansible repo') {
            steps {
                checkout changelog: false, 
                poll: false, 
                scm: scmGit(branches: [[name: '*/**']],
                extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: 'ansible'], localBranch('main')],
                userRemoteConfigs: [[credentialsId: 'GITHUB_TOKEN', url: 'https://github.com/mohammadsereshki/ansible.git']])
            }
        }
        stage('Clone python repo') {
            steps {
                checkout changelog: false,
                poll: false,
                scm: scmGit(branches: [[name: '**']], 
                extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: 'python_test'], localBranch('uat')], 
                userRemoteConfigs: [[credentialsId: 'GITHUB_TOKEN', 
                url: 'https://github.com/mohammadsereshki/python_test.git']])
            }
        }
        stage('run ansible') {
            steps {
                ansiblePlaybook colorized: true, 
                extras: '-e "jenkins_pipeline_path=${workspace}"', 
                inventory: '${workspace}/ansible/inventory/capex_uat.ini', 
                playbook: '${workspace}/ansible/git_activity/main.yml', 
                vaultCredentialsId: 'vault_pass', vaultTmpPath: ''
            }
            
        }
        stage('Upload File to Slack') {
            steps {
                sh 'pwd'
                sh 'ls'
                sh "echo hey > blah.txt"
                slackUploadFile filePath: "*.txt", initialComment:  "HEY HEY"
                script {
                    // Replace 'slackToken' with your Slack API token
                    slackUploadFile filePath: "/var/jenkins/workspace/first_pipeline/ansible/inventory/*.ini", initialComment: 'File uploaded from Jenkins pipeline'

                }
            }
        }
    }
    environment {
        EMAIL_TO = "mohammadsereshki@gmail.com"
    }
    post {
        always {

            slackSend botUser: true, channel: '#jenkins-test', message: 'salam chetori', teamDomain: 'testjenkins-slack-plugin', tokenCredentialId: 'SLACK_TOKEN'
            slackSend botUser: true, channel: '#mas', message: 'salam chetori mas', teamDomain: 'testjenkins-slack-plugin', tokenCredentialId: 'SLACK_TOKEN'
            
        }
        cleanup {
            cleanWs()
        }
    }
}
